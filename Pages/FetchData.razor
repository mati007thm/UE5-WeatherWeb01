@page "/fetchdata"
@using UE5_WeatherWeb01.Data
@inject WeatherForecastService ForecastService

<PageTitle>Weather forecast</PageTitle>

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from a service.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>

    <div class="text-center">
        <h1 class="display-4">Weather forecast</h1>
        <div class="container">
            <div class="row">
                @foreach (var weather in forecasts)
                {
                    <div class="col">
                        <div>
                            <span style="font-size: 72px">@weather.Emoji</span>
                        </div>
                        <div>
                            <span style="font-size: 48px">@weather.TemperatureC&#8451;</span>
                        </div>
                        <div>
                            <span>@weather.Date.ToString("dd MMM")</span>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
}

@code {
    private IEnumerable<WeatherForecast>? forecasts;

    protected override async Task OnInitializedAsync()
    {
        //forecasts = await ForecastService.GetForecastAsync(DateOnly.FromDateTime(DateTime.Now));
        forecasts = await ForecastService.GetForeCastFromFunction();
        //StateHasChanged();
    }
}
